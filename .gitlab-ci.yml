image: registry.tccenter.ru/public/golang:1.17.7-buster

stages:
  - test
  - build
  - upload

format:
  stage: test
  script:
    - go fmt $(go list ./... | grep -v /vendor/)
    - go vet $(go list ./... | grep -v /vendor/)
    - go test -race $(go list ./... | grep -v /vendor/)

compile:
  stage: build
  script:
    - mkdir -p binaries
    - |
      platforms=("windows/amd64" "windows/386" "darwin/amd64" "darwin/arm64" "linux/amd64" "linux/386" "linux/arm64")

      for platform in "${platforms[@]}"
      do
      	platform_split=(${platform//\// })
      	GOOS=${platform_split[0]}
      	GOARCH=${platform_split[1]}
      	output_name=bctl'-'$GOOS'-'$GOARCH'-'$CI_COMMIT_TAG
      	if [ $GOOS = "windows" ]; then
      		output_name+='.exe'
      	fi	

      	env GOOS=$GOOS GOARCH=$GOARCH go build -o binaries/$output_name
      	if [ $? -ne 0 ]; then
         		echo 'An error has occurred! Aborting the script execution...'
      		exit 1
      	fi
      done
  artifacts:
    paths:
      - binaries
    expire_in: 1 yrs
  only:
    - tags

upload:
  stage: upload
  script:
    - - |
        platforms=("windows/amd64" "windows/386" "darwin/amd64" "darwin/arm64" "linux/amd64" "linux/386" "linux/arm64")

        for platform in "${platforms[@]}"
        do
        	platform_split=(${platform//\// })
        	GOOS=${platform_split[0]}
        	GOARCH=${platform_split[1]}
        	output_name=bctl'-'$GOOS'-'$GOARCH'-'$CI_COMMIT_TAG
        	if [ $GOOS = "windows" ]; then
        		output_name+='.exe'
        	fi	
            
            curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file binaries/$output_name "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/$CI_COMMIT_TAG/$output_name"
        done
  artifacts:
    paths:
      - binaries
    expire_in: 1 yrs
  only:
    - tags
